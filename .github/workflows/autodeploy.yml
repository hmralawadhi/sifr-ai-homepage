name: Deploy to Cloudflare Pages (no npm)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: List root files (debug)
        run: |
          echo "Repo root contents:"
          ls -la

      - name: Verify Cloudflare secrets exist
        run: |
          if [ -z "${{ secrets.CF_API_TOKEN }}" ]; then echo "Missing CF_API_TOKEN"; exit 1; fi
          if [ -z "${{ secrets.CF_ACCOUNT_ID }}" ]; then echo "Missing CF_ACCOUNT_ID"; exit 1; fi
          if [ -z "${{ secrets.CF_PROJECT_NAME }}" ]; then echo "Missing CF_PROJECT_NAME"; exit 1; fi

      - name: Trigger Cloudflare Pages deployment via API
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_PROJECT_NAME: ${{ secrets.CF_PROJECT_NAME }}
        run: |
          set -e
          echo "Triggering Pages deployment for project: ${CF_PROJECT_NAME} (account ${CF_ACCOUNT_ID})"
          STATUS=$(curl -s -w "%{http_code}" -o /tmp/cf_response.json -X POST \
            "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/pages/projects/${CF_PROJECT_NAME}/deployments" \
            -H "Authorization: Bearer ${CF_API_TOKEN}" \
            -H "Content-Type: application/json" \
            --data '{}')
          echo "Cloudflare API HTTP status: $STATUS"
          cat /tmp/cf_response.json || true
          if [ "$STATUS" -lt 200 ] || [ "$STATUS" -ge 300 ]; then
            echo "Cloudflare Pages deployment trigger failed (status $STATUS)"
            echo "See response above."
            exit 1
          fi
          echo "Cloudflare Pages deployment triggered successfully."
